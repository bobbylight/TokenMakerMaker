import static org.gradle.api.JavaVersion.current

plugins {
    id 'com.github.spotbugs' version '2.0.1'
}
['java', 'checkstyle', 'com.github.spotbugs', 'distribution', 'maven-publish', 'signing'].each { apply plugin: it }

assert current().isJava11Compatible()

group = 'com.fifesoft'
archivesBaseName = 'tokenMakerMaker'

repositories {
    mavenCentral()
}

dependencies {

    implementation 'de.jflex:jflex:1.4.1'
    implementation "com.fifesoft.rtext:fife.common:${fifeCommonVersion}"
    implementation "com.fifesoft:rsyntaxtextarea:${rstaVersion}"
    implementation 'com.miglayout:miglayout-swing:5.0'
    implementation 'net.java.balloontip:balloontip:1.2.4.1'
	testImplementation 'junit:junit:4.12'
}

wrapper {
	gradleVersion '6.0.1'
}

checkstyle {
    toolVersion = '8.27'
    configDirectory = file("$rootProject.projectDir/config/checkstyle")
    configFile = 'config/checkstyle/checkstyle.xml' as File
}

tasks.withType(com.github.spotbugs.SpotBugsTask) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

compileJava {
	sourceCompatibility javaVersion
	targetCompatibility javaVersion
	options.debug = true
	options.debugOptions.debugLevel = 'source,vars,lines'
	options.compilerArgs << '-Xlint:deprecation' << '-Xlint:unchecked'
}

ext.isReleaseVersion = !project.version.endsWith('SNAPSHOT')

ext.sharedManifest = manifest {
	attributes('Main-Class': 'org/fife/tmm/Main',
		'Class-Path': "balloontip-1.2.4.1.jar fife.common-${fifeCommonVersion}.jar jflex-1.4.1.jar miglayout-core-5.0.jar miglayout-swing-5.0.jar rsyntaxtextarea-${rstaVersion}.jar",
		'Specification-Title': 'TokenMakerMaker',
		'Specification-Version': version,
		'Implementation-Title': 'org.fife.ui',
		'Implementation-Version': version)

}

java {
    withSourcesJar()
    withJavadocJar()
}
jar {
	manifest { from sharedManifest }
}

// We use "distributions" to create the zip files uploaded to SourceForge
distributions {
	main {
        distributionBaseName = 'tmm'
		contents {
			from { [ "${projectDir.absolutePath}/build/libs", configurations.runtimeClasspath ] }
			rename 'TokenMakerMaker-.*\\.jar', 'tmm.jar'
			//rename '(jflex-.*\\.jar)', 'lib/$1'
		}
	}
	src {
        distributionBaseName = 'tmm'
	}
}
distZip.classifier = null
distZip {
	from "$projectDir/lib"
	include '**'
	from "$projectDir/../RSyntaxTextArea/build/libs"
	include 'rsyntaxtextarea-${version}.jar'
	rename { return "${archiveBaseName}-${archiveVersion}/${it}" }
}
distZip.dependsOn jar
srcDistZip.classifier = 'src'
srcDistZip {
	from projectDir
	include 'src/**'
	include 'lib/**'
	include 'build.gradle'
	include '.classpath'
	include '.project'
	include 'gradle.properties'
	include 'gradle/**/*'
	include 'gradlew*'
	include 'README.md'
	include '.settings/**'
}

// Stuff to generate and upload Maven artifacts
task buildSourceForgeZips {
    doLast {
        println 'Building zip files for SourceForge'
    }
}
buildSourceForgeZips.dependsOn clean, jar, distZip, srcDistZip

publishing {
    repositories {
        maven {
            def releasesRepoUrl = 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
            def snapshotsRepoUrl = 'https://oss.sonatype.org/content/repositories/snapshots/'
            url = isReleaseVersion ? releasesRepoUrl : snapshotsRepoUrl
            credentials { // Credentials usually kept in user's .gradle/gradle.properties
                // We must defensively check for these properties so Travis CI build works
                username = project.hasProperty('ossrhUsername') ? ossrhUsername : 'unknown'
                password = project.hasProperty('ossrhPassword') ? ossrhPassword : 'unknown'
            }
        }
    }
    publications {
        maven(MavenPublication) {

            groupId = 'com.fifesoft'
            artifactId = 'tokenmakermaker'
            version = version

            from components.java

            pom {
                name = 'TokenMakerMaker'
                description = 'An application to easily create syntax highlighting for custom languages in RSyntaxTextArea.'
                inceptionYear = '2003'
                packaging = 'jar'
                licenses {
                    license {
                        name = 'BSD-3-Clause'
                        url = 'https://github.com/bobbylight/AutoComplete/blob/master/AutoComplete/src/main/dist/AutoComplete.License.txt'
                    }
                }
                developers {
                    developer {
                        name = 'Robert Futrell'
                    }
                }
                scm {
                    url = 'https://github.com/bobbylight/TokenMakerMaker'
                    connection = 'scm:git:git://github.com/bobbylight/TokenMakerMaker'
                    developerConnection = 'scm:git:git@github.com:bobbylight/TokenMakerMaker'
                    if (isReleaseVersion) {
                        tag = project.version
                    }
                }
            }
        }
    }
}

signing {
    // Don't require signing for e.g. ./gradlew install
    required { gradle.taskGraph.hasTask('publish') && isReleaseVersion }
    sign publishing.publications.maven
}
tasks.withType(Sign) {
    onlyIf { isReleaseVersion }
}
